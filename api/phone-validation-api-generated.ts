/* tslint:disable */
/* eslint-disable */
/*
person

The Person REST APIs enable you to access information about the worker person, including country-specific configuration information about name components.

The version of the OpenAPI document: v4


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { setOAuthToObject } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { CountryPhoneCodeDb1991f2fb091000169c5e0cb7c200b9 } from '../models';
// @ts-ignore
import { DeviceTypeDb1991f2fb091000169c5e28fc0400bb } from '../models';
// @ts-ignore
import { ERRORMODELREFERENCE } from '../models';
// @ts-ignore
import { PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 } from '../models';
// @ts-ignore
import { VALIDATIONERRORMODELREFERENCE } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * PhoneValidationApi - axios parameter creator
 * @export
 */
export const PhoneValidationApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Validates the specified completePhoneNumber in the request body. The completePhoneNumber field is required in the request body.  If the specified completePhoneNumber is valid, this method returns the 201 response status. If the specified completePhoneNumber is invalid, this method returns the 400 response status with a validation error message.   This method assumes the Allowed Phone Validations for the country of the phone is enabled on the Tenant Setup - Global configuration. If the tenant configuration has disabled the Allowed Phone Validations for the associated country, the validation returns as valid.  Secured by: REST API Public
         * @summary Validates phone number data to ensure it is valid for Workday.
         * @param {PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8} phoneNumberValidationDb1991f2fb091000169c5dfa023800b8 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        validatePhoneNumber: async (phoneNumberValidationDb1991f2fb091000169c5dfa023800b8: PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'phoneNumberValidationDb1991f2fb091000169c5dfa023800b8' is not null or undefined
            assertParamExists('validatePhoneNumber', 'phoneNumberValidationDb1991f2fb091000169c5dfa023800b8', phoneNumberValidationDb1991f2fb091000169c5dfa023800b8)
            const localVarPath = `/phoneValidation`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: phoneNumberValidationDb1991f2fb091000169c5dfa023800b8,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/phoneValidation',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(phoneNumberValidationDb1991f2fb091000169c5dfa023800b8, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * PhoneValidationApi - functional programming interface
 * @export
 */
export const PhoneValidationApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = PhoneValidationApiAxiosParamCreator(configuration)
    return {
        /**
         * Validates the specified completePhoneNumber in the request body. The completePhoneNumber field is required in the request body.  If the specified completePhoneNumber is valid, this method returns the 201 response status. If the specified completePhoneNumber is invalid, this method returns the 400 response status with a validation error message.   This method assumes the Allowed Phone Validations for the country of the phone is enabled on the Tenant Setup - Global configuration. If the tenant configuration has disabled the Allowed Phone Validations for the associated country, the validation returns as valid.  Secured by: REST API Public
         * @summary Validates phone number data to ensure it is valid for Workday.
         * @param {PhoneValidationApiValidatePhoneNumberRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async validatePhoneNumber(requestParameters: PhoneValidationApiValidatePhoneNumberRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8>> {
            const phoneNumberValidationDb1991f2fb091000169c5dfa023800b8: PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8 = {
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.validatePhoneNumber(phoneNumberValidationDb1991f2fb091000169c5dfa023800b8, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * PhoneValidationApi - factory interface
 * @export
 */
export const PhoneValidationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = PhoneValidationApiFp(configuration)
    return {
        /**
         * Validates the specified completePhoneNumber in the request body. The completePhoneNumber field is required in the request body.  If the specified completePhoneNumber is valid, this method returns the 201 response status. If the specified completePhoneNumber is invalid, this method returns the 400 response status with a validation error message.   This method assumes the Allowed Phone Validations for the country of the phone is enabled on the Tenant Setup - Global configuration. If the tenant configuration has disabled the Allowed Phone Validations for the associated country, the validation returns as valid.  Secured by: REST API Public
         * @summary Validates phone number data to ensure it is valid for Workday.
         * @param {PhoneValidationApiValidatePhoneNumberRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        validatePhoneNumber(requestParameters: PhoneValidationApiValidatePhoneNumberRequest, options?: AxiosRequestConfig): AxiosPromise<PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8> {
            return localVarFp.validatePhoneNumber(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for validatePhoneNumber operation in PhoneValidationApi.
 * @export
 * @interface PhoneValidationApiValidatePhoneNumberRequest
 */
export type PhoneValidationApiValidatePhoneNumberRequest = {
    
} & PhoneNumberValidationDb1991f2fb091000169c5dfa023800b8

/**
 * PhoneValidationApiGenerated - object-oriented interface
 * @export
 * @class PhoneValidationApiGenerated
 * @extends {BaseAPI}
 */
export class PhoneValidationApiGenerated extends BaseAPI {
    /**
     * Validates the specified completePhoneNumber in the request body. The completePhoneNumber field is required in the request body.  If the specified completePhoneNumber is valid, this method returns the 201 response status. If the specified completePhoneNumber is invalid, this method returns the 400 response status with a validation error message.   This method assumes the Allowed Phone Validations for the country of the phone is enabled on the Tenant Setup - Global configuration. If the tenant configuration has disabled the Allowed Phone Validations for the associated country, the validation returns as valid.  Secured by: REST API Public
     * @summary Validates phone number data to ensure it is valid for Workday.
     * @param {PhoneValidationApiValidatePhoneNumberRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PhoneValidationApiGenerated
     */
    public validatePhoneNumber(requestParameters: PhoneValidationApiValidatePhoneNumberRequest, options?: AxiosRequestConfig) {
        return PhoneValidationApiFp(this.configuration).validatePhoneNumber(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
